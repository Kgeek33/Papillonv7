name: 📁 Release APKs PR (Build + Deploy)

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      pr_number:
        description: "Numéro de la pull request"
        required: true
        default: ""

jobs:
  build_android:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: ⚙️ Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: 💾 Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: 💾 Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 💾 Install dependencies
        run: npm ci

      - name: 🛠️ Modify app.config.ts
        run: node modifyConfig.js
      
      - name: 🛠️ Modify build.gradle for Split APKs
        run: |
          sed -i '/android {/a \
          splits { \
              abi { \
                  enable true \
                  reset() \
                  include "armeabi-v7a", "arm64-v8a", "x86", "x86_64" \
                  universalApk true \
              } \
          }' android/app/build.gradle
          sed -i '/buildToolsVersion/d' android/app/build.gradle

      - name: 🔄 Run Expo Prebuild
        run: npm run prebuild

      - name: 🚀 Build APKs for specific ABIs
        run: |
          cd android
          ./gradlew assembleRelease
          ls app/build/outputs/apk/release/

      - name: 🛜 Upload split APKs
        uses: actions/upload-artifact@v4
        with:
          name: split-apks
          path: android/app/build/outputs/apk/release/*.apk
          if-no-files-found: error

  deploy_new_release:
    needs: build_android
    runs-on: ubuntu-latest
    steps:
      - name: 📡 Download Android APKs
        uses: actions/download-artifact@v4
        with:
          name: split-apks
          path: split-apks

      - name: 🛜 Create or Update GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: pr${{ github.event.pull_request.number || github.event.inputs.pr_number }}
          release_name: "PR #${{ github.event.pull_request.number || github.event.inputs.pr_number }}"
          body: |
            Teste cette PR en téléchargeant un des APK et fais une review ! 👍
          draft: false
          prerelease: true
          update_existing: true

      - name: 📥 Upload split APKs to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_or_update_release.outputs.upload_url }}
          asset_path: split-apks/*.apk
          asset_name: Papillon Dev-${{ github.event.pull_request.number || github.event.inputs.pr_number }}-{arch}.apk
          asset_content_type: application/octet-stream
