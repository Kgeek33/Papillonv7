name: 📁 Release APKs PR (Build + Deploy)

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branche à builder"
        required: true
        default: ""
      pr_number:
        description: "Numéro de la pull request"
        required: true
        default: ""

jobs:
  build_android:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: 💾 Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 💾 Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"

      - name: ⚙️ Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 17
          cache: "gradle"

      - name: 💾 Install dependencies
        run: npm i

      - name: 🛠️ Modify app.config.ts
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require("fs");
            const path = require("path");
            const configPath = path.join(process.cwd(), "app.config.ts");
            let configContent = fs.readFileSync(configPath, "utf8");
            configContent = configContent.replace(
              /name: "Papillon"/,
              "name: \"Papillon Dev\""
            );
            configContent = configContent.replace(
              /package: "xyz.getpapillon.app"/,
              "package: \"xyz.getpapillon.app.dev\""
            );
            fs.writeFileSync(configPath, configContent, "utf8");
            console.log("app.config.ts modifié avec succès");

      - name: 🔄 Run Expo Prebuild
        run: npm run prebuild

      - name: 🚀 Build APKs for specific ABIs
        run: |
          cd android
          ./gradlew assembleRelease

      - name: 🛠️ Rename APK files
        run: |
          cd android/app/build/outputs/apk/release/
          for file in *.apk; do
            mv "$file" "Papillon Dev-${file%-release.apk}-PR_${{ github.event.inputs.pr_number }}.apk"
          done

      - name: 🛜 Upload split APKs
        uses: actions/upload-artifact@v4
        with:
          name: split-apks
          path: android/app/build/outputs/apk/release/*.apk
          if-no-files-found: error

  deploy_new_release:
    needs: build_android
    runs-on: ubuntu-latest
    steps:
      - name: 📡 Download Android APKs
        uses: actions/download-artifact@v4
        with:
          name: split-apks
          path: .

      - name: 🛜 Create or Update GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: pr${{ github.event.inputs.pr_number }}
          name: "PR #${{ github.event.inputs.pr_number }}"
          body: "Teste cette PR en téléchargeant un des APK et fais une review ! 👍"
          draft: false
          prerelease: true
          files: |
            *.apk
